import tkinter as tk
from tkinter import messagebox
import json
import os

TODO_FILE = 'tasks.json'

def load_tasks():
    if not os.path.exists(TODO_FILE):
        return []
    with open(TODO_FILE, 'r') as file:
        return json.load(file)

def save_tasks(tasks):
    with open(TODO_FILE, 'w') as file:
        json.dump(tasks, file, indent=4)

def add_task():
    task = entry_task.get()
    if task:
        tasks = load_tasks()
        tasks.append({'task': task, 'done': False})
        save_tasks(tasks)
        entry_task.delete(0, tk.END)
        refresh_task_list()
    else:
        messagebox.showwarning("Input Error", "Please enter a task.")

def update_task():
    try:
        index = listbox_tasks.curselection()[0]
        tasks = load_tasks()
        tasks[index]['done'] = not tasks[index]['done']
        save_tasks(tasks)
        refresh_task_list()
    except IndexError:
        messagebox.showwarning("Selection Error", "Please select a task.")

def delete_task():
    try:
        index = listbox_tasks.curselection()[0]
        tasks = load_tasks()
        removed_task = tasks.pop(index)
        save_tasks(tasks)
        refresh_task_list()
    except IndexError:
        messagebox.showwarning("Selection Error", "Please select a task.")

def refresh_task_list():
    listbox_tasks.delete(0, tk.END)
    tasks = load_tasks()
    for task in tasks:
        status = " (Done)" if task['done'] else " (Not Done)"
        listbox_tasks.insert(tk.END, task['task'] + status)

app = tk.Tk()
app.title("To-Do List Application")

frame_tasks = tk.Frame(app)
frame_tasks.pack()

listbox_tasks = tk.Listbox(frame_tasks, height=10, width=50)
listbox_tasks.pack(side=tk.LEFT)

scrollbar_tasks = tk.Scrollbar(frame_tasks)
scrollbar_tasks.pack(side=tk.RIGHT, fill=tk.Y)

listbox_tasks.config(yscrollcommand=scrollbar_tasks.set)
scrollbar_tasks.config(command=listbox_tasks.yview)

entry_task = tk.Entry(app, width=50)
entry_task.pack()

button_add_task = tk.Button(app, text="Add Task", width=48, command=add_task)
button_add_task.pack()

button_update_task = tk.Button(app, text="Update Task", width=48, command=update_task)
button_update_task.pack()

button_delete_task = tk.Button(app, text="Delete Task", width=48, command=delete_task)
button_delete_task.pack()

refresh_task_list()

app.mainloop()
